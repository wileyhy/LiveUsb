#!/bin/bash
# shellcheck disable=SC2016

scr_nm=fn_breakpoint
declare -n nL=LINENO
declare -- PS4='\e[m+ \t.$(
                            printf "%s" "${EPOCHREALTIME##*.}"; 
                            for ((ii=0;ii<="${#BASH_SOURCE[@]}";ii++)) { printf "  ";}
                          )>\e[38;5;43m'

_xbp_err ()
{ 
  : _xbp: ERROR '$1 = *', _xbp_err-line:$LINENO
  printf '%s: _xbp: ERROR: line: %d\n' "$scr_nm" "${1//[a-zA-Z]}"
  exit 101
}

## Usage:   _xbp [ |+|x|e]
_xbp() 
{
  :
 
  case "$#" in 
    0 )
      : _xbp: NO-OP '$# = 0', _xbp-line:$LINENO
      return
      ;;
    1 )
      : _xbp: '$# = 1', line:$LINENO
      case "$1" in
        + )
          : _xbp: XTRACE __OFF__ '$1 = -', _xbp-line:$LINENO
          set +x
          ;;
        x )
          : _xbp: XTRACE __ON__ '$1 = x', _xbp-line:$LINENO
          set -x
          ;;
        e[0-9]* )
          : _xbp: EXIT '$1 = e[0-9]*', _xbp-line:$LINENO
          printf '%s: _xbp: exit: line: %d\n' "$scr_nm" "${1//[a-zA-Z]}"
          exit 101
          ;;
        * )
          _xbp_err "$1"
          ;;
      esac
      ;;
    * )
      _xbp_err "$1"
      ;;
  esac
}


# action            noop    xon   xoff    exit

# from state xon    >xon   >xon   >xoff   >exit

# from state xoff   >xoff  >xon   >xoff   >exit


# Changes

:; echo global, zero, noop, line:$LINENO
#   xoff  A:noop   > xon
_xbp 

:; echo global, one, xon, line:$LINENO
#   xoff  A:xon   > xon
_xbp x

:; echo global, two, noop, line:$LINENO
#   xon   A:noop  > xon
_xbp 

:; echo global, three, xoff, line:$LINENO
#   xon   A:xoff  > xoff
_xbp +

:; echo global, four, noop, line:$LINENO
#   xoff  A:noop  > xoff
_xbp 

#:; echo global, five, exit, line:$LINENO
#   xoff  A:exit  > exit
#_xbp e$nL

:; echo global, six, noop, line:$LINENO
#   xoff  A:noop  > xoff
_xbp y

:; echo global, seven, xon, line:$LINENO
#   xoff  A:xon   > xon
_xbp x

:; echo global, eight, exit, line:$LINENO
#   xon   A:exit  > exit
_xbp e$nL

